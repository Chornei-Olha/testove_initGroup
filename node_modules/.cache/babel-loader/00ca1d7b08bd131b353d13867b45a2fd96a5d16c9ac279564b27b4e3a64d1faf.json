{"ast":null,"code":"var _jsxFileName = \"/Users/chorneiolha/Documents/GitHub/testove_input/src/components/atoms/InputText/InputText.tsx\";\nimport React from \"react\";\nimport \"./InputText.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputText = ({\n  id,\n  placeholder,\n  value,\n  onChange,\n  size = \"small\",\n  quiet = false,\n  disabled = false,\n  hasError = false\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `input-text-container ${hasError ? \"error\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: id,\n      type: \"text\",\n      placeholder: placeholder,\n      value: value,\n      onChange: onChange,\n      className: `input-text ${size} ${quiet ? \"quiet\" : \"\"}`,\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), hasError && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-message\",\n      children: \"Invalid input. Try again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), !hasError && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"description-message\",\n      children: \"Passwords must be at least 8 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = InputText;\nexport default InputText;\nvar _c;\n$RefreshReg$(_c, \"InputText\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InputText","id","placeholder","value","onChange","size","quiet","disabled","hasError","className","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chorneiolha/Documents/GitHub/testove_input/src/components/atoms/InputText/InputText.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./InputText.css\";\n\ninterface InputTextProps {\n  id: string;\n  placeholder?: string;\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  size?: \"small\" | \"medium\" | \"large\" | \"extra-large\";\n  quiet?: boolean;\n  disabled?: boolean;\n  hasError?: boolean;\n}\n\nconst InputText: React.FC<InputTextProps> = ({\n  id,\n  placeholder,\n  value,\n  onChange,\n  size = \"small\",\n  quiet = false,\n  disabled = false,\n  hasError = false,\n}) => {\n  return (\n    <div className={`input-text-container ${hasError ? \"error\" : \"\"}`}>\n      <input\n        id={id}\n        type=\"text\"\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        className={`input-text ${size} ${quiet ? \"quiet\" : \"\"}`}\n        disabled={disabled}\n      />\n      {hasError && (\n        <span className=\"error-message\">Invalid input. Try again</span>\n      )}\n      {!hasError && (\n        <span className=\"description-message\">\n          Passwords must be at least 8 characters\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default InputText;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAazB,MAAMC,SAAmC,GAAGA,CAAC;EAC3CC,EAAE;EACFC,WAAW;EACXC,KAAK;EACLC,QAAQ;EACRC,IAAI,GAAG,OAAO;EACdC,KAAK,GAAG,KAAK;EACbC,QAAQ,GAAG,KAAK;EAChBC,QAAQ,GAAG;AACb,CAAC,KAAK;EACJ,oBACET,OAAA;IAAKU,SAAS,EAAE,wBAAwBD,QAAQ,GAAG,OAAO,GAAG,EAAE,EAAG;IAAAE,QAAA,gBAChEX,OAAA;MACEE,EAAE,EAAEA,EAAG;MACPU,IAAI,EAAC,MAAM;MACXT,WAAW,EAAEA,WAAY;MACzBC,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBK,SAAS,EAAE,cAAcJ,IAAI,IAAIC,KAAK,GAAG,OAAO,GAAG,EAAE,EAAG;MACxDC,QAAQ,EAAEA;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACDP,QAAQ,iBACPT,OAAA;MAAMU,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAC/D,EACA,CAACP,QAAQ,iBACRT,OAAA;MAAMU,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAEtC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACC,EAAA,GA/BIhB,SAAmC;AAiCzC,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}