"use strict";
(globalThis["webpackChunktestove_input"] = globalThis["webpackChunktestove_input"] || []).push([["stories-InputText-stories"],{

/***/ "./src/stories/ InputText.stories.tsx":
/*!********************************************!*\
  !*** ./src/stories/ InputText.stories.tsx ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   Disabled: () => (/* binding */ Disabled),
/* harmony export */   Quiet: () => (/* binding */ Quiet),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _components_atoms_InputText_InputText__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/atoms/InputText/InputText */ "./src/components/atoms/InputText/InputText.tsx");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");


const meta = {
  title: "Atoms/InputText",
  component: _components_atoms_InputText_InputText__WEBPACK_IMPORTED_MODULE_0__["default"],
  tags: ["autodocs"],
  argTypes: {
    id: {
      control: "text"
    },
    placeholder: {
      control: "text"
    },
    value: {
      control: "text"
    },
    onChange: {
      action: "changed"
    },
    quiet: {
      control: "boolean"
    },
    disabled: {
      control: "boolean"
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const Default = {
  args: {
    id: "input-id",
    placeholder: "Enter text...",
    value: "",
    onChange: () => {},
    quiet: false,
    disabled: false
  }
};
const Quiet = {
  args: {
    id: "input-id",
    placeholder: "Enter text",
    value: "",
    onChange: () => {},
    quiet: true,
    disabled: false
  }
};
const Disabled = {
  args: {
    id: "input-id",
    placeholder: "Enter text",
    value: "",
    onChange: () => {},
    quiet: false,
    disabled: true
  }
};
;
const __namedExportsOrder = ["Default", "Quiet", "Disabled"];
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    id: \"input-id\",\n    placeholder: \"Enter text...\",\n    value: \"\",\n    onChange: () => {},\n    quiet: false,\n    disabled: false\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
Quiet.parameters = {
  ...Quiet.parameters,
  docs: {
    ...Quiet.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    id: \"input-id\",\n    placeholder: \"Enter text\",\n    value: \"\",\n    onChange: () => {},\n    quiet: true,\n    disabled: false\n  }\n}",
      ...Quiet.parameters?.docs?.source
    }
  }
};
Disabled.parameters = {
  ...Disabled.parameters,
  docs: {
    ...Disabled.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    id: \"input-id\",\n    placeholder: \"Enter text\",\n    value: \"\",\n    onChange: () => {},\n    quiet: false,\n    disabled: true\n  }\n}",
      ...Disabled.parameters?.docs?.source
    }
  }
};

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

}]);
//# sourceMappingURL=stories-InputText-stories.iframe.bundle.js.map